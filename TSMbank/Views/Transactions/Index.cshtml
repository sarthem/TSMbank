@model TSMbank.ViewModels.TransactionsDetailsViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>My Transactions</h2>

@if (Model == null)
{
    <label>No transactions yet</label>
}
else
{
    <ul id="transactionsId">
        @foreach (var transaction in Model.Transactions)
        {
            <li>From @transaction.DebitAccountNo To @transaction.CreditAccountNo  amount @transaction.DebitAmount time @transaction.ValueDateTime.ToShortTimeString() </li>
        }
    </ul>

    @*<table id="transactions" class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>Time</th>
                    <th>Date</th>
                    <th>Account</th>
                    <th>Amount</th>
                    <th>Balance</th>
                </tr>
            </thead>
            @foreach (var trans in Model.Transactions)
            {
                <tr id="transactionsId">
                    <td> @trans.ValueDateTime.ToLongTimeString()</td>
                    <td>@Html.ActionLink(trans.ValueDateTime.ToLongDateString(), "Details", "Transactions", new { id = trans.TransactionId, accountNumber = Model.AccountNumber }, null)</td>
                    @if (Model.AccountNumber == trans.CreditAccountNo)
                    {
                        <td><label>Transfered From </label>: @trans.DebitIBAN</td>
                        <td> @trans.CreditAmount</td>
                        <td> @trans.CreditAccountBalanceAfterTransaction</td>
                    }
                    else
                    {
                        <td><label>Transfered To </label>: @trans.CreditIBAN</td>
                        <td> - @trans.CreditAmount</td>
                        <td> @trans.DebitAccountBalanceAfterTransaction</td>
                    }
                </tr>
            }
        </table>*@

}
<p>
    @Html.ActionLink("back", "Index", "Individuals", null, new { @class = "btn btn-primary" })
</p>

@section scripts
{
    <script>

        var progress = $.connection.signalHub;
        $.connection.hub.start().done(function () {
        });
        progress.client.showTransactions = function (request) {
            let timenow = new Date(request.Time);
            $("#transactionsId").prepend(`<li>From ${request.DebitAccountNo} To ${request.CreditAccountNo} amount
                ${request.DebitAmount} time ${timenow.toLocaleTimeString()}</li>`)

        };













            /////////////////////////////////////////////////////////////////////////////////////////
            //$(document).ready(function () {
            //    $('#transactions').DataTable();

            //});


            //var progress = $.connection.signalHub;
            //$.connection.hub.start().done(function () {
            //});


            //progress.client.showTransactions = function (trans) {
            //    let timenow = new Date(trans.Time);
            //    if (Model.AccountNumber == trans.CreditAccountNo) {

            //        $("#transactionsId").prepend(`<td>${timenow.ToLongTimeString()}</td>
            //                                    <td>${timenow.ToLongDateString()} </td>
            //                                    <td><label>Transfered From </label>: ${trans.DebitAccountNo}</td>
            //                                    <td> ${trans.DebitAmount}</td>
            //                                    <td> ${trans.CreditAccountBalanceAfterTransaction}</td>`);
            //    } else {
            //        $("#transactionsId").prepend(`<td>${timenow.ToLongTimeString()}</td>
            //                                    <td>${timenow.ToLongDateString()} </td>
            //                                    <td><label>Transfered To </label>: ${trans.CreditAccountNo}</td>
            //                                    <td> - ${trans.DebitAmount}</td>
            //                                    <td> ${trans.DebitAccountBalanceAfterTransaction}</td>`);
            //    }

            //};

    </script>
}
