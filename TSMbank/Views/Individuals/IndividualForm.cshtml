@model TSMbank.ViewModels.IndividualFormViewModel
@using TSMbank.ViewModels;
@{
    ViewBag.Title = "New";
    //Layout = "~/Views/Shared/_Layout.cshtml";
    Layout = "~/Views/Individuals/_Layout.cshtml";
}

<h2>@Model.Title</h2>
@using (Html.BeginForm("Save", "Individuals"))
{
    @Html.HiddenFor(m => m.IndividualId)
    @Html.HiddenFor(m => m.ModificationAction)  
    <div class="row">
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(m => m.Individual.FirstName)
                @Html.TextBoxFor(m => m.Individual.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Individual.FirstName)
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(m => m.Individual.LastName)
                @Html.TextBoxFor(m => m.Individual.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Individual.LastName)
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(m => m.Individual.FathersName)
                @Html.TextBoxFor(m => m.Individual.FathersName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Individual.FathersName)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(m => m.Individual.SSN)
                @Html.TextBoxFor(m => m.Individual.SSN, new { @maxlength = "11", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Individual.SSN)
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(m => m.Individual.VatNumber)
                @Html.TextBoxFor(m => m.Individual.VatNumber, new { @maxlength = "9", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Individual.VatNumber)
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(m => m.Individual.IdentificationCardNo)
                @Html.TextBoxFor(m => m.Individual.IdentificationCardNo, new { @maxlength = "8", @class = "form-control", @style = "text-transform:uppercase;" })
                @Html.ValidationMessageFor(m => m.Individual.SSN)
                @Html.ValidationMessageFor(m => m.Individual.IdentificationCardNo)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(m => m.Individual.DateOfBirth)
                @Html.TextBoxFor(m => m.Individual.DateOfBirth, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Individual.DateOfBirth)
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(m => m.Individual.Email)
                @Html.TextBoxFor(m => m.Individual.Email, new { @class = "form-control", @readonly = "true" })
                @Html.ValidationMessageFor(m => m.Individual.Email)
            </div>
        </div>
    </div>
   
    <h3>Primary Address</h3>
    <div class="row">
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(m => m.PrimaryAddress.Street)
                @Html.TextBoxFor(m => m.PrimaryAddress.Street, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PrimaryAddress.Street)
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(m => m.PrimaryAddress.StreetNumber)
                @Html.TextBoxFor(m => m.PrimaryAddress.StreetNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PrimaryAddress.StreetNumber)
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(m => m.PrimaryAddress.Region)
                @Html.TextBoxFor(m => m.PrimaryAddress.Region, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PrimaryAddress.Region)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(m => m.PrimaryAddress.City)
                @Html.TextBoxFor(m => m.PrimaryAddress.City, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PrimaryAddress.City)
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(m => m.PrimaryAddress.Country)
                @Html.TextBoxFor(m => m.PrimaryAddress.Country, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PrimaryAddress.Country)
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(m => m.PrimaryAddress.PostalCode)
                @Html.TextBoxFor(m => m.PrimaryAddress.PostalCode, new { @maxlength = "5", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PrimaryAddress.PostalCode)
            </div>
        </div>
    </div>

   
    if (Model.Phones.Count() == 0)
    {
        <h3>Phone Numbers</h3>

        <div id="section-phones">
            <div class="row">
                <div class="col-sm-3">
                    <div class="form-group">
                        <label for="Phones_0__CountryCode">CountryCode</label>
                        <input class="form-control" id="Phones_0__CountryCode" name="Phones[0].CountryCode" type="text">
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <label for="Phones_0__PhoneType">PhoneType</label>
                        <select class="form-control" data-val="true" data-val-required="The PhoneType field is required."
                                id="Phones_0__PhoneType" name="Phones[0].PhoneType">
                            <option value="0">Mobile</option>
                            <option value="1">Home</option>
                            <option value="2">Work</option>
                        </select>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <label for="Phones_0__PhoneNumber">PhoneNumber</label>
                        <input class="form-control" id="Phones_0__PhoneNumber" name="Phones[0].PhoneNumber" type="text">
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        for (int i = 0; i < Model.Phones.Count; i++)
        {
            <div class="row">
                @Html.HiddenFor(m => Model.Phones[i].Id)
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(m => Model.Phones[i].CountryCode)
                        @Html.TextBoxFor(m => Model.Phones[i].CountryCode, new { @maxlength = "4", @class = "form-control" })
                        @Html.ValidationMessageFor(m => Model.Phones[i].CountryCode)
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(m => Model.Phones[i].PhoneType)
                        @Html.EnumDropDownListFor(m => Model.Phones[i].PhoneType, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => Model.Phones[i].PhoneType)
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(m => Model.Phones[i].PhoneNumber)
                        @Html.TextBoxFor(m => Model.Phones[i].PhoneNumber, new { @maxlength = "10", @class = "form-control" })
                        @Html.ValidationMessageFor(m => Model.Phones[i].PhoneNumber)
                    </div>
                </div>
            </div>
        }
    }
  <input type="button" value="Add new Phone" class="btn btn-primary" id="add-phone" />
  <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    <script>
        let idx;
        if (@Model.Phones.Count() === 0) {
            idx = 1;
        } else {
            idx = @Model.Phones.Count();
        }
       
        document.getElementById("add-phone").addEventListener("click", function () {
            let sectionPhones = document.getElementById("section-phones");
            var fieldset = document.createElement("div");
            fieldset.classList.add("row");
            if (idx < 4) {
                fieldset.innerHTML =
                    `<div class="col-sm-3">
                                <div class="form-group">
                                    <label for="Phones_${idx}__CountryCode">CountryCode</label>
                                    <input class="form-control" id="Phones_${idx}__CountryCode" name="Phones[${idx}].CountryCode" type="text"
                                            value>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    <label for="Phones_${idx}__PhoneType">PhoneType</label>
                                    <select class="form-control" data-val="true" data-val-required="The PhoneType field is required."
                                            id="Phones_${idx}__PhoneType" name="Phones[${idx}].PhoneType">
                                        <option value="0">Mobile</option>
                                        <option value="1">Home</option>
                                        <option value="2">Work</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    <label for="Phones_${idx}__PhoneNumber">PhoneNumber</label>
                                    <input class="form-control" id="Phones_${idx}__PhoneNumber" name="Phones[${idx}].PhoneNumber" type="text"
                                            value>
                                </div>
                            </div>`;

                sectionPhones.appendChild(fieldset);
                idx++;
            };
                
        });     
    </script>

}
